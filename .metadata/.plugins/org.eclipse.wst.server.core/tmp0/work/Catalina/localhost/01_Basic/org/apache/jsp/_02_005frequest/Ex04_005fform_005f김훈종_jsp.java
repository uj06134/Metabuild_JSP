/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.80
 * Generated at: 2025-09-09 01:17:59 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp._02_005frequest;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class Ex04_005fform_005f김훈종_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("Ex04_form_김훈종.jsp\r\n");
      out.write("<br>\r\n");
      out.write("<!-- 1. jQuery 라이브러리 불러오기 -->\r\n");
      out.write("<script type=\"text/javascript\" src = \"../js/jquery.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("	/* 2. jQuery 실행 준비 */\r\n");
      out.write("	$(function(){\r\n");
      out.write("		\r\n");
      out.write("	});\r\n");
      out.write("	/* 3. check() 함수 */\r\n");
      out.write("	function check(){\r\n");
      out.write("		if ($(\"input[name='id']\").val() == \"\"){a\r\n");
      out.write("			alert('아이디를 입력하세요');\r\n");
      out.write("			$(\"input[name='id']\").focus();\r\n");
      out.write("			return false;\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		if($(\"input[name='pw']\").val() == \"\"){\r\n");
      out.write("			alert('비밀번호를 입력하세요');\r\n");
      out.write("			$(\"input[name='id']\").focus();\r\n");
      out.write("			return false;\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		if($(\"input[name='product']:checked\").length == 0){\r\n");
      out.write("	        alert('최소 상품 하나를 선택하세요')\r\n");
      out.write("	        return false;\r\n");
      out.write("	    }\r\n");
      out.write("		\r\n");
      out.write("		if($(\"select[name='time']\").val()==\"선택\"){\r\n");
      out.write("			alert('배송시간을 선택하세요')\r\n");
      out.write("			$(\"select[name='time']\").focus();\r\n");
      out.write("	        return false;\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		if($(\"input[name='approve']:checked\").length == 0){\r\n");
      out.write("			alert('결제방법을 선택하세요')\r\n");
      out.write("	        return false;\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		/* if(!$('input[name=approve]').is(\":checked\")) {\r\n");
      out.write("			  alert(\"결제 방법을 선택해주세요.\");\r\n");
      out.write("			  return false;\r\n");
      out.write("		} */\r\n");
      out.write("	} // check\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("<h2>상품 구매 내역</h2>\r\n");
      out.write("<FORM name=\"myform\" METHOD=\"post\" ACTION=\"Ex04_result_김훈종.jsp\">\r\n");
      out.write("\r\n");
      out.write("	<span>아이디 :</span> <INPUT TYPE=\"text\" NAME=\"id\"><br>\r\n");
      out.write("	<br> <span>비번 :</span> <INPUT TYPE=\"text\" NAME=\"pw\"><br>\r\n");
      out.write("	<p>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("		<span>구매상품:</span> \r\n");
      out.write("		<input type=\"checkbox\" name=\"product\" value=\"식품\">식품\r\n");
      out.write("		<input type=\"checkbox\" name=\"product\" value=\"의류\">의류 \r\n");
      out.write("		<input type=\"checkbox\" name=\"product\" value=\"도서\">도서 \r\n");
      out.write("		<input type=\"checkbox\" name=\"product\" value=\"가구\">가구\r\n");
      out.write("	<p>\r\n");
      out.write("\r\n");
      out.write("		<span>배송시간 :</span> <SELECT NAME=\"time\">\r\n");
      out.write("			<OPTION VALUE=\"선택\">선택</OPTION>\r\n");
      out.write("			<OPTION VALUE=\"9시~11시\">9시~11시</OPTION>\r\n");
      out.write("			<OPTION VALUE=\"11시~1시\">11시~1시</OPTION>\r\n");
      out.write("			<OPTION VALUE=\"1시~5시\">1시~5시</OPTION>\r\n");
      out.write("			<OPTION VALUE=\"5시~9시\">5시~9시</OPTION>\r\n");
      out.write("		</SELECT>\r\n");
      out.write("	<p>\r\n");
      out.write("\r\n");
      out.write("		<span>결제방법:</span> \r\n");
      out.write("		카드 <INPUT TYPE=\"radio\" NAME=\"approve\" VALUE=\"카드\">\r\n");
      out.write("		핸드폰 <INPUT TYPE=\"radio\" NAME=\"approve\" VALUE=\"핸드폰\">\r\n");
      out.write("	<p>\r\n");
      out.write("		<span>결제 동의합니다. </span> <INPUT TYPE=\"checkbox\" NAME=\"agree\" id=\"agree\">\r\n");
      out.write("	<p>\r\n");
      out.write("\r\n");
      out.write("		<INPUT TYPE=\"submit\" value=\"보내기\" onClick=\"return check()\">\r\n");
      out.write("</FORM>\r\n");
      out.write("\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
