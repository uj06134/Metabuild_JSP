/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.80
 * Generated at: 2025-09-16 02:53:11 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class replyForm_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!-- content.jsp(ref,re_step,re_level) => replyForm.jsp -->\r\n");
      out.write("\r\n");

	int ref = Integer.parseInt(request.getParameter("ref"));
	int re_step = Integer.parseInt(request.getParameter("re_step"));
	int re_level = Integer.parseInt(request.getParameter("re_level"));
	String pageNum = request.getParameter("pageNum");

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\" src=\"js/jquery.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"script.js\"></script>\r\n");
      out.write("\r\n");
      out.write("<b>글쓰기</b>\r\n");
      out.write("<br>\r\n");
      out.write("<form method=\"post\" name=\"replyform\" action=\"replyProc.jsp\" onsubmit=\"return writeSave()\">\r\n");
      out.write("	<input type=\"hidden\" name = \"ref\" value = ");
      out.print(ref );
      out.write("> \r\n");
      out.write("	<input type=\"hidden\" name = \"re_step\" value = ");
      out.print(re_step );
      out.write("> \r\n");
      out.write("	<input type=\"hidden\" name = \"re_level\" value = ");
      out.print(re_level );
      out.write("> \r\n");
      out.write("	<input type=\"hidden\" name = \"pageNum\" value = ");
      out.print(pageNum );
      out.write(">\r\n");
      out.write("	 \r\n");
      out.write("	<table width=\"450\" border=\"1\" cellspacing=\"0\" cellpadding=\"0\"\r\n");
      out.write("		align=\"center\">\r\n");
      out.write("		<tr>\r\n");
      out.write("			<td align=\"right\" colspan=\"2\"><a href=\"list.jsp\"> 글목록</a></td>\r\n");
      out.write("		</tr>\r\n");
      out.write("		<tr>\r\n");
      out.write("			<td width=\"150\" align=\"center\">이 름</td>\r\n");
      out.write("			<td width=\"300\" align=\"left\"><input type=\"text\" size=\"30\"\r\n");
      out.write("				maxlength=\"10\" name=\"writer\" value=\"홍길동\"></td>\r\n");
      out.write("		</tr>\r\n");
      out.write("\r\n");
      out.write("		<tr>\r\n");
      out.write("			<td width=\"150\" align=\"center\">제 목</td>\r\n");
      out.write("			<td width=\"300\" align=\"left\"><input type=\"text\" size=\"50\"\r\n");
      out.write("				maxlength=\"50\" name=\"subject\" value=\"[답글]어떤글\"></td>\r\n");
      out.write("		</tr>\r\n");
      out.write("\r\n");
      out.write("		<tr>\r\n");
      out.write("			<td width=\"150\" align=\"center\">Email</td>\r\n");
      out.write("			<td width=\"300\" align=\"left\"><input type=\"text\" size=\"50\"\r\n");
      out.write("				maxlength=\"30\" name=\"email\" value=\"aa@xx.com\"></td>\r\n");
      out.write("		</tr>\r\n");
      out.write("\r\n");
      out.write("		<tr>\r\n");
      out.write("			<td width=\"150\" align=\"center\">내 용</td>\r\n");
      out.write("			<td width=\"300\" align=\"left\"><textarea name=\"content\" id=\"abc\"\r\n");
      out.write("					rows=\"13\" cols=\"50\">호호호</textarea></td>\r\n");
      out.write("		</tr>\r\n");
      out.write("		<tr>\r\n");
      out.write("			<td width=\"150\" align=\"center\">비밀번호</td>\r\n");
      out.write("			<td width=\"300\" align=\"left\"><input type=\"password\" size=\"10\"\r\n");
      out.write("				maxlength=\"12\" name=\"passwd\" value=\"1234\"></td>\r\n");
      out.write("		</tr>\r\n");
      out.write("		<tr>\r\n");
      out.write("			<td colspan=2 align=\"center\" height=\"30\"><input type=\"submit\"\r\n");
      out.write("				value=\"글쓰기\"> <input type=\"reset\" value=\"다시작성\"> <input\r\n");
      out.write("				type=\"button\" value=\"목록보기\" OnClick=\"window.location='list.jsp'\">\r\n");
      out.write("			</td>\r\n");
      out.write("		</tr>\r\n");
      out.write("	</table>\r\n");
      out.write("</form>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
