/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.80
 * Generated at: 2025-09-16 02:53:09 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import myPkg.BoardDao;
import java.text.SimpleDateFormat;
import myPkg.BoardBean;

public final class content_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("myPkg.BoardDao");
    _jspx_imports_classes.add("java.text.SimpleDateFormat");
    _jspx_imports_classes.add("myPkg.BoardBean");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!-- list.jsp(제목 num) => content.jsp -->\r\n");
      out.write("\r\n");

	BoardDao bdao = BoardDao.getInstance();
	String num = request.getParameter("num");
	
	// 글 수정, 글 목록으로 돌아갈시 들고갈 페이지 번호
	String pageNum = request.getParameter("pageNum");
	System.out.println("content" + pageNum);

	
	BoardBean bb = bdao.getArticle(Integer.parseInt(num));
	SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd HH:mm");
	
	// 답글
	int ref = bb.getRef();
	int re_step = bb.getRe_step();
	int re_level = bb.getRe_level();

      out.write("\r\n");
      out.write("\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write("    table {\r\n");
      out.write("        width: 700px;\r\n");
      out.write("        margin: auto;\r\n");
      out.write("        border: 1px solid black;\r\n");
      out.write("       	border-collapse: collapse;\r\n");
      out.write("    }\r\n");
      out.write("    table th {\r\n");
      out.write("        background-color: skyblue;\r\n");
      out.write("        color: black;\r\n");
      out.write("        border: 1px solid black;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    table td{\r\n");
      out.write("        border: 1px solid black;\r\n");
      out.write("    }\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("<table>\r\n");
      out.write("    <tr>\r\n");
      out.write("        <th>글번호</th>\r\n");
      out.write("        <td>");
      out.print(bb.getNum());
      out.write("</td>\r\n");
      out.write("        <th>조회수</th>\r\n");
      out.write("        <td>");
      out.print(bb.getReadcount());
      out.write("</td>\r\n");
      out.write("    </tr>\r\n");
      out.write("    <tr>\r\n");
      out.write("        <th>작성자</th>\r\n");
      out.write("        <td>");
      out.print(bb.getWriter());
      out.write("</td>\r\n");
      out.write("        <th>작성일</th>\r\n");
      out.write("        <td>");
      out.print(sdf.format(bb.getReg_date()));
      out.write("</td>\r\n");
      out.write("    </tr>\r\n");
      out.write("    <tr>\r\n");
      out.write("        <th>글제목</th>\r\n");
      out.write("        <td colspan=\"3\">");
      out.print(bb.getSubject());
      out.write("</td>\r\n");
      out.write("    </tr>\r\n");
      out.write("    <tr>\r\n");
      out.write("        <th>글내용</th>\r\n");
      out.write("        <td colspan=\"3\">");
      out.print(bb.getContent());
      out.write("</td>\r\n");
      out.write("    </tr>\r\n");
      out.write("    <tr>\r\n");
      out.write("        <td colspan=\"4\">\r\n");
      out.write("        	<input type=\"button\" value=\"글수정\" onClick = \"window.location='updateForm.jsp?num=");
      out.print(bb.getNum());
      out.write("&pageNum=");
      out.print(pageNum);
      out.write("'\">\r\n");
      out.write("        	<input type=\"button\" value=\"글삭제\" onClick = \"window.location='deleteForm.jsp?num=");
      out.print(bb.getNum());
      out.write("&pageNum=");
      out.print(pageNum);
      out.write("'\"\">\r\n");
      out.write("        	<input type=\"button\" value=\"답글쓰기\" onClick=\"window.location='replyForm.jsp?ref=");
      out.print(ref);
      out.write("&re_step=");
      out.print(re_step);
      out.write("&re_level=");
      out.print(re_level);
      out.write("&pageNum=");
      out.print(pageNum);
      out.write("'\">\r\n");
      out.write("        	<input type=\"button\" value=\"글목록\" onClick = \"window.location='list.jsp?pageNum=");
      out.print(pageNum);
      out.write("'\">\r\n");
      out.write("        </td>\r\n");
      out.write("    </tr>\r\n");
      out.write("</table>\r\n");
      out.write("\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
