/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.80
 * Generated at: 2025-09-12 07:57:39 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class insertForm_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<script type=\"text/javascript\" src=\"js/jquery.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("	$(function(){\r\n");
      out.write("		// 중복체크 버튼을 클릭 했을 때\r\n");
      out.write("		$(\"#id_check\").click(function(){\r\n");
      out.write("			var isCheck = false; // 중복체크를 클릭하면 true, 클릭하지 않으면 false\r\n");
      out.write("			var isChange = false;\r\n");
      out.write("			var use = \"\";\r\n");
      out.write("			if($(\"input[name=id]\").val() == ''){\r\n");
      out.write("				alert(\"아이디 입력\")\r\n");
      out.write("				return;\r\n");
      out.write("			}\r\n");
      out.write("			\r\n");
      out.write("			$.ajax({\r\n");
      out.write("				url: \"id_check_proc.jsp\", // 사용가능:yes. 사용불가능:no\r\n");
      out.write("				data: ({\r\n");
      out.write("					userid: $(\"input[name=id]\").val() \r\n");
      out.write("				}),\r\n");
      out.write("				success: function(data){\r\n");
      out.write("					alert(data);\r\n");
      out.write("					if($.trim(data) == 'YES'){\r\n");
      out.write("						$(\"#idmessage\").html(\"<font color=blue>사용가능</font>\");\r\n");
      out.write("						$(\"#idmessage\").show();\r\n");
      out.write("						use = \"possible\";\r\n");
      out.write("					} else{\r\n");
      out.write("						$(\"#idmessage\").html(\"<font color=red>이미 사용중인 아이디입니다</font>\");\r\n");
      out.write("						$(\"#idmessage\").show();\r\n");
      out.write("						use = \"impossible\";\r\n");
      out.write("					}\r\n");
      out.write("				}// success\r\n");
      out.write("			});// ajax\r\n");
      out.write("		});// click\r\n");
      out.write("		\r\n");
      out.write("		$(\"input[name=id]\").keydown(function(){\r\n");
      out.write("			$(\"#idmessage\").css(\"display\", \"none\");\r\n");
      out.write("			use = \"\";\r\n");
      out.write("			isChange = true;\r\n");
      out.write("		});// keydown\r\n");
      out.write("		\r\n");
      out.write("		$('#sub').click(function(){\r\n");
      out.write("			if(use == \"impossible\"){\r\n");
      out.write("				alert(\"이미 사용중인 아이디입니다.\")\r\n");
      out.write("				return false; // 이미 사용중인데 넘어가지 못하게 false\r\n");
      out.write("			}else if(isCheck == false || isChange == true){ //중복체크 버튼 클릭하지 않았으면\r\n");
      out.write("				alert('중복체크를 클릭하세요');\r\n");
      out.write("				return false;\r\n");
      out.write("			}else if($(\"input[name=id]\").val() == ''){\r\n");
      out.write("				alert(\"아이디를 입력하세요 submit\")\r\n");
      out.write("				return false;\r\n");
      out.write("			}\r\n");
      out.write("		});// submit click\r\n");
      out.write("	});\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("</script>\r\n");
 
	String [] genre = {"공포", "다큐", "액션", "애니메이션"};
	String [] time = {"08~10","10~12","12~14","14~16","16~18"};

      out.write("\r\n");
      out.write("	<h2>영화 선호도 조사 </h2>\r\n");
      out.write("	<form action=\"inputProc.jsp\" method=\"post\">\r\n");
      out.write("		<table border=\"1\">\r\n");
      out.write("		<tr>\r\n");
      out.write("			<td>아이디</td>\r\n");
      out.write("			<td>\r\n");
      out.write("				<input type=\"text\" name=\"id\" value=\"\">\r\n");
      out.write("				<input type=\"button\" id=\"id_check\" value=\"중복체크\">\r\n");
      out.write("				<span id = \"idmessage\" style=\"display:none\"></span>			\r\n");
      out.write("			</td>  \r\n");
      out.write("		</tr>\r\n");
      out.write("		<tr>\r\n");
      out.write("			<td>이름</td><td> \r\n");
      out.write("			<input type=\"text\" name=\"name\" value=\"\"></td> \r\n");
      out.write("		</tr> \r\n");
      out.write("		<tr>\r\n");
      out.write("			<td>나이</td>\r\n");
      out.write("			<td><input type=\"text\" name=\"age\" value=\"\"></td> \r\n");
      out.write("		</tr>\r\n");
      out.write("		<tr>\r\n");
      out.write("			<td>좋아하는 장르</td>\r\n");
      out.write("			<td>\r\n");
      out.write("			");
for(String g : genre) { 
      out.write("\r\n");
      out.write("			  <input type=\"checkbox\" name=\"genre\" value=\"");
      out.print( g );
      out.write('"');
      out.write('>');
      out.print( g );
      out.write("\r\n");
      out.write("			");
} 
      out.write("\r\n");
      out.write("				\r\n");
      out.write("			</td> \r\n");
      out.write("		</tr>\r\n");
      out.write("\r\n");
      out.write("		<tr>\r\n");
      out.write("			<td>즐겨보는 시간대</td>\r\n");
      out.write("			<td>\r\n");
      out.write("		\r\n");
      out.write("				<select name=\"time\">\r\n");
      out.write("					");
for(int i=0; i<time.length; i++){ 
      out.write("\r\n");
      out.write("    				<option value=\"");
      out.print( time[i] );
      out.write('"');
      out.write('>');
      out.print( time[i] );
      out.write("</option>\r\n");
      out.write("					");
} 
      out.write("\r\n");
      out.write("				</select>\r\n");
      out.write("		<tr>\r\n");
      out.write("			<td>동반 관객수</td>\r\n");
      out.write("			<td>\r\n");
      out.write("				");

				for(int i=1;i<=5;i++){
				
      out.write("\r\n");
      out.write("					<input type=\"radio\" name=\"partner\" value=\"");
      out.print(i);
      out.write('"');
      out.write('>');
      out.print(i);
      out.write("\r\n");
      out.write("				");
} 
      out.write("\r\n");
      out.write("			</td>\r\n");
      out.write("		</tr>\r\n");
      out.write("		\r\n");
      out.write("		<tr>\r\n");
      out.write("			<td>영화관 개선사항</td>\r\n");
      out.write("			<td>\r\n");
      out.write("				<textarea name=\"memo\" cols=\"40\" rows=\"3\"></textarea> \r\n");
      out.write("			</td>\r\n");
      out.write("		</tr>\r\n");
      out.write("		<tr align=\"center\">\r\n");
      out.write("			<td colspan=\"2\">\r\n");
      out.write("				<input type=\"submit\" value=\"가입하기\" id=\"sub\">\r\n");
      out.write("			</td>\r\n");
      out.write("		</tr>\r\n");
      out.write("		</table>\r\n");
      out.write("	</form>\r\n");
      out.write("\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
