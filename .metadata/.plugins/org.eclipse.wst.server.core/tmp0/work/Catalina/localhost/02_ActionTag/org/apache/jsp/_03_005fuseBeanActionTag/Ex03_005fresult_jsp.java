/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.80
 * Generated at: 2025-09-09 07:41:20 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp._03_005fuseBeanActionTag;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class Ex03_005fresult_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');

	request.setCharacterEncoding("UTF-8");
	String id = request.getParameter("id");
	String pw = request.getParameter("pw");
	String [] fruit = request.getParameterValues("fruit");

      out.write("\r\n");
      out.write("<hr>\r\n");
      out.write("<!-- FruitBean 클래스 안에 fruit 프로퍼티가 배열(String[]) 로 정의 -->\r\n");
      myPkg.FruitBean fb = null;
      fb = (myPkg.FruitBean) _jspx_page_context.getAttribute("fb", javax.servlet.jsp.PageContext.PAGE_SCOPE);
      if (fb == null){
        fb = new myPkg.FruitBean();
        _jspx_page_context.setAttribute("fb", fb, javax.servlet.jsp.PageContext.PAGE_SCOPE);
      }
      out.write('\r');
      out.write('\n');
      org.apache.jasper.runtime.JspRuntimeLibrary.introspecthelper(_jspx_page_context.findAttribute("fb"), "name", request.getParameter("name"), request, "name", false);
      out.write('\r');
      out.write('\n');
      org.apache.jasper.runtime.JspRuntimeLibrary.introspecthelper(_jspx_page_context.findAttribute("fb"), "password", request.getParameter("password"), request, "password", false);
      out.write('\r');
      out.write('\n');
      org.apache.jasper.runtime.JspRuntimeLibrary.introspecthelper(_jspx_page_context.findAttribute("fb"), "fruit", request.getParameter("fruit"), request, "fruit", false);
      out.write("\r\n");
      out.write("\r\n");
      out.write("name: ");
      out.write(org.apache.jasper.runtime.JspRuntimeLibrary.toString((((myPkg.FruitBean)_jspx_page_context.findAttribute("fb")).getName())));
      out.write(" <br>\r\n");
      out.write("pw: ");
      out.write(org.apache.jasper.runtime.JspRuntimeLibrary.toString((((myPkg.FruitBean)_jspx_page_context.findAttribute("fb")).getPassword())));
      out.write(" <br>\r\n");
      out.write("fruit: \r\n");

	String [] arr = fb.getFruit();
	for(int i=0;i<arr.length;i+=1){
		out.print(arr[i]+" ");
	}

      out.write("\r\n");
      out.write("<hr>\r\n");
      out.write("\r\n");
      out.write("<!-- FruitBean2 클래스 안의 fruit 프로퍼티는 문자열(String) 로 정의 -->\r\n");
      myPkg.FruitBean2 fb2 = null;
      fb2 = (myPkg.FruitBean2) _jspx_page_context.getAttribute("fb2", javax.servlet.jsp.PageContext.PAGE_SCOPE);
      if (fb2 == null){
        fb2 = new myPkg.FruitBean2();
        _jspx_page_context.setAttribute("fb2", fb2, javax.servlet.jsp.PageContext.PAGE_SCOPE);
      }
      out.write('\r');
      out.write('\n');
      org.apache.jasper.runtime.JspRuntimeLibrary.introspecthelper(_jspx_page_context.findAttribute("fb2"), "name", request.getParameter("name"), request, "name", false);
      out.write('\r');
      out.write('\n');
      org.apache.jasper.runtime.JspRuntimeLibrary.introspecthelper(_jspx_page_context.findAttribute("fb2"), "password", request.getParameter("password"), request, "password", false);
      out.write("\r\n");
      out.write("\r\n");

	String temp="";
	String [] fruit2 = request.getParameterValues("fruit");
	for(int i=0;i<fruit2.length;i+=1){
		temp += fruit2[i]+" ";
	}
	fb2.setFruit(temp);

      out.write("\r\n");
      out.write("name: ");
      out.write(org.apache.jasper.runtime.JspRuntimeLibrary.toString((((myPkg.FruitBean2)_jspx_page_context.findAttribute("fb2")).getName())));
      out.write(" <br>\r\n");
      out.write("pw: ");
      out.write(org.apache.jasper.runtime.JspRuntimeLibrary.toString((((myPkg.FruitBean2)_jspx_page_context.findAttribute("fb2")).getPassword())));
      out.write(" <br>\r\n");
      out.write("fruit: ");
      out.write(org.apache.jasper.runtime.JspRuntimeLibrary.toString((((myPkg.FruitBean2)_jspx_page_context.findAttribute("fb2")).getFruit())));
      out.write(" <br>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
