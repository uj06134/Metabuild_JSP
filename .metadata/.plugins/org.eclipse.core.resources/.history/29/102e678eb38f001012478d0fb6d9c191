package myPkg;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;

public class MovieDao {
	String driver = "oracle.jdbc.driver.OracleDriver";
    String url = "jdbc:oracle:thin:@localhost:1521:orcl";
    String id = "sqlid";
    String pw = "sqlpw";
    Connection conn = null;
    PreparedStatement ps = null;
	ResultSet rs = null;
	
	public MovieDao() {
		try {
			Class.forName(driver);
			System.out.println("드라이버 성공");
		} catch (ClassNotFoundException e) {
			e.printStackTrace();
		}
	}
	
	public void getConnection() {
		try {
			conn = DriverManager.getConnection(url, id, pw);
			System.out.println("접속 성공");
		} catch (SQLException e) {
			e.printStackTrace();
		}
	}
	
	public ArrayList<MovieBean> getAllMovie() {
		getConnection();
		ArrayList<MovieBean> list = new ArrayList<MovieBean>();
		try {
			String sql = "select * from movie order by num";
			ps = conn.prepareStatement(sql);
			rs = ps.executeQuery();
			
			while(rs.next()) {
				int num = rs.getInt("num");
				String id = rs.getString("id");
				String name = rs.getString("name");
				int age = rs.getInt("age");
				String genre = rs.getString("genre");
				String time = rs.getString("time");
				int partner = rs.getInt("partner");
				String memo = rs.getString("memo");
				
				MovieBean mb = new MovieBean(num, id, name, age, genre, time, partner, memo); 
				
				list.add(mb);
			}
		} catch (SQLException e) {
			e.printStackTrace();
		} finally {
			try {
				if(rs != null)
					rs.close();
				if(ps != null)
					ps.close();
				if(conn != null)
					conn.close();
			} catch(SQLException e) {
				e.printStackTrace();
			}
		}
		return list;
	}// getAllMovie
	
	public int insertMovie(MovieBean mb) {
		getConnection();
		int cnt = -1;
		String sql = "insert into movie values(mv_seq.nextval, ?, ?, ?, ?, ?, ?, ?)";
		try {
			ps = conn.prepareStatement(sql);
			ps.setString(1, mb.getId());
			ps.setString(2, mb.getName());
			ps.setInt(3, mb.getAge());
			ps.setString(4, mb.getGenre());
			ps.setString(5, mb.getTime());
			ps.setInt(6, mb.getPartner());
			ps.setString(7, mb.getMemo());
			
			cnt = ps.executeUpdate();
		} catch (SQLException e) {
			e.printStackTrace();
		} finally {
			try {
				if(ps != null)
					ps.close();
				if(conn != null)
					conn.close();
			} catch(SQLException e) {
				e.printStackTrace();
			}
		}
		return cnt;
	}// insertMovie
	
	public MovieBean getMovieByNum(String num) {
		getConnection();
		MovieBean mb = null;
		try {
			String sql = "select * from movie where num = ?";
			ps = conn.prepareStatement(sql);
			ps.setInt(1, Integer.parseInt(num));
			rs = ps.executeQuery();
			if(rs.next()) {
				int num2 = rs.getInt("num");
				String id = rs.getString("id");
				String name = rs.getString("name");
				int age = rs.getInt("age");
				String genre = rs.getString("genre");
				String time = rs.getString("time");
				int partner = rs.getInt("partner");
				String memo = rs.getString("memo");
				
				mb = new MovieBean(num2, id, name, age, genre, time, partner, memo);

			}
		} catch (SQLException e) {
			e.printStackTrace();
		} finally {
			try {
				if(rs != null)
					rs.close();
				if(ps != null)
					ps.close();
				if(conn != null)
					conn.close();
			} catch(SQLException e) {
				e.printStackTrace();
			}
		}
		return mb;
	}// getMovieByNum
	
	public int updateMovie(MovieBean mb) {
		getConnection();
		int cnt = -1;
		try {
			String sql = "update movie set id=?, name=?, age=?, genre=?, time=?, partner=?, memo=? where num=?";
			ps = conn.prepareStatement(sql);
			ps.setString(1, mb.getId());
			ps.setString(2, mb.getName());
			ps.setInt(3, mb.getAge());
			ps.setString(4, mb.getGenre());
			ps.setString(5, mb.getTime());
			ps.setInt(6, mb.getPartner());
			ps.setString(7, mb.getMemo());
			ps.setInt(8, mb.getNum());
			
			cnt = ps.executeUpdate();

		} catch (SQLException e) {
			e.printStackTrace();
		} finally {
			try {
				if(ps != null)
					ps.close();
				if(conn != null)
					conn.close();
			} catch(SQLException e) {
				e.printStackTrace();
			}
		}
	return cnt;
	}// updateMovie
	
	public boolean searchId(String userid){
		getConnection();
		boolean flag = false;
		try {
			String sql = "select * from movie where id=?";
			ps = conn.prepareStatement(sql);
			ps.setString(1, userid);
			rs = ps.executeQuery();
			while(rs.next()) {
				flag = true; // 이미 존재
			}
		} catch (SQLException e) {
			e.printStackTrace();
		} finally {
			try {
				if(rs != null)
					rs.close();
				if(ps != null)
					ps.close();
				if(conn != null)
					conn.close();
			} catch(SQLException e) {
				e.printStackTrace();
			}
		}
		return flag;
	}// searchId
	
	public int deleteMovie(String num) {
        getConnection();
        int cnt = -1;
        try {
        	String sql = "delete from movie where num = ?";
            ps = conn.prepareStatement(sql);
            ps.setInt(1, Integer.parseInt(num));
            cnt = ps.executeUpdate();
        } catch (SQLException e) {
            e.printStackTrace();
        }finally {
            try {
                if(conn != null) conn.close();
                if(ps != null) ps.close();
            } catch (SQLException e) {
                e.printStackTrace();
            }
        }
        return cnt;
    }// deleteMovie
	public int multiDeleteMovie(String[] num) {
        getConnection();
        int cnt = -1
        try {
        	String sql = "delete from movie where num=?";
        	for(int i=1;i<num.length;i+=1) {
        		sql += " or no=?";
        	}
			ps = conn.prepareStatement(sql);
			for(int i=1;i<num.length;i+=1) {
				ps.setInt(i, Integer.parseInt(num[i]));
			}
			
			cnt = ps.executeUpdate();

		} catch (SQLException e) {
			e.printStackTrace();
		}
	}
}
